{"ast":null,"code":"import { makeAutoObservable, runInAction } from \"mobx\";\nimport agent from \"../services/agent\";\nexport default class BusinessStore {\n  constructor() {\n    this.business = [];\n\n    this.getAllBusiness = async () => {\n      try {\n        const business = await agent.Commerce.list();\n        runInAction(() => {\n          business.forEach(x => {\n            x.lastSale = x.lastSale.split(\"T\")[0];\n            this.business.push(x);\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.searchBusiness = async () => {\n      try {\n        const commerce;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johnarlinton/Library/Mobile Documents/com~apple~CloudDocs/Development/Challenge Koibanx/client-app/src/store/businessStore.ts"],"names":["makeAutoObservable","runInAction","agent","BusinessStore","constructor","business","getAllBusiness","Commerce","list","forEach","x","lastSale","split","push","error","console","log","searchBusiness","commerce"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,WAA7B,QAAgD,MAAhD;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,eAAe,MAAMC,aAAN,CAAoB;AAGjCC,EAAAA,WAAW,GAAG;AAAA,SAFdC,QAEc,GAFS,EAET;;AAAA,SAIdC,cAJc,GAIG,YAAY;AAC3B,UAAI;AACF,cAAMD,QAAQ,GAAG,MAAMH,KAAK,CAACK,QAAN,CAAeC,IAAf,EAAvB;AACAP,QAAAA,WAAW,CAAC,MAAM;AAChBI,UAAAA,QAAQ,CAACI,OAAT,CAAkBC,CAAD,IAAiB;AAChCA,YAAAA,CAAC,CAACC,QAAF,GAAaD,CAAC,CAACC,QAAF,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAb;AACA,iBAAKP,QAAL,CAAcQ,IAAd,CAAmBH,CAAnB;AACD,WAHD;AAID,SALU,CAAX;AAMD,OARD,CAQE,OAAOI,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAhBa;;AAAA,SAkBdG,cAlBc,GAkBG,YAAY;AACzB,UAAI;AACA,cAAMC,QAAN;AACH,OAFD,CAEE,OAAOJ,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAxBa;;AACZd,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AALgC","sourcesContent":["import { makeAutoObservable, runInAction } from \"mobx\";\nimport { Business } from \"../models/business\";\nimport agent from \"../services/agent\";\n\nexport default class BusinessStore {\n  business: Business[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  getAllBusiness = async () => {\n    try {\n      const business = await agent.Commerce.list();\n      runInAction(() => {\n        business.forEach((x: Business) => {\n          x.lastSale = x.lastSale.split(\"T\")[0];\n          this.business.push(x);\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchBusiness = async () => {\n      try {\n          const commerce \n      } catch (error) {\n          console.log(error);\n      }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}